# """
# Django settings for EasyCart project.
#
# Generated by 'django-admin startproject' using Django 5.1.2.
#
# For more information on this file, see
# https://docs.djangoproject.com/en/5.1/topics/settings/
#
# For the full list of settings and their values, see
# https://docs.djangoproject.com/en/5.1/ref/settings/
# """
#
# from pathlib import Path
# import os
# from django.db import connections
# from django.db.utils import OperationalError
#
# # Build paths inside the project like this: BASE_DIR / 'subdir'.
# BASE_DIR = Path(__file__).resolve().parent.parent
#
#
# # Quick-start development settings - unsuitable for production
# # See https://docs.djangoproject.com/en/5.1/howto/deployment/checklist/
#
# # SECURITY WARNING: keep the secret key used in production secret!
# SECRET_KEY = 'django-insecure-aqithoo8jxi9na(nh(weqtrux$_dl365xk0f!uk6(lm4nd1e%a'
#
# # SECURITY WARNING: don't run with debug turned on in production!
# DEBUG = True
#
# ALLOWED_HOSTS = []
#
#
# # Application definition
#
# INSTALLED_APPS = [
#     "User.apps.UserConfig",
#     "home.apps.HomeConfig",
#     "product.apps.ProductConfig",
#     'django.contrib.admin',
#     'django.contrib.auth',
#     'django.contrib.contenttypes',
#     'django.contrib.sessions',
#     'django.contrib.messages',
#     'django.contrib.staticfiles',
#     'rest_framework',
#     'worker.apps.WorkerConfig',
#     'rest_framework.authtoken',
# ]
# #
# # REST_FRAMEWORK = {
# #     'DEFAULT_AUTHENTICATION_CLASSES':
# #         [r'rest_framework.authentication.BaseAuthentication',],
# #     'DEFAULT_PERMISSION_CLASSES': [
# #         'rest_framework.permissions.IsAuthenticated',
# #     ]
# # }
#
# # REST_FRAMEWORK = {
# #     'DEFAULT_AUTHENTICATION_CLASSES': [
# #         'rest_framework_simplejwt.authentication.JWTAuthentication',
# #     ],
# #     'DEFAULT_PERMISSION_CLASSES': [
# #         'rest_framework.permissions.IsAuthenticated',
# #     ],
# # }
#
#
# MIDDLEWARE = [
#     'django.middleware.security.SecurityMiddleware',
#     'django.contrib.sessions.middleware.SessionMiddleware',
#     'django.middleware.common.CommonMiddleware',
#     'django.middleware.csrf.CsrfViewMiddleware',
#     'django.contrib.auth.middleware.AuthenticationMiddleware',
#     'django.contrib.messages.middleware.MessageMiddleware',
#     'django.middleware.clickjacking.XFrameOptionsMiddleware',
# ]
#
# ROOT_URLCONF = 'EasyCart.urls'
#
# TEMPLATES = [
#     {
#         'BACKEND': 'django.template.backends.django.DjangoTemplates',
#         'DIRS': [],
#         'APP_DIRS': True,
#         'OPTIONS': {
#             'context_processors': [
#                 'django.template.context_processors.debug',
#                 'django.template.context_processors.request',
#                 'django.contrib.auth.context_processors.auth',
#                 'django.contrib.messages.context_processors.messages',
#             ],
#         },
#     },
# ]
#
# WSGI_APPLICATION = 'EasyCart.wsgi.application'
#
#
# #####
# ########### old Database ############
# # https://docs.djangoproject.com/en/5.1/ref/settings/#databases
#
# # DATABASES = {
# #     'default': {
# #         'ENGINE': 'django.db.backends.sqlite3',
# #         'NAME': BASE_DIR / 'db.sqlite3',
# #     }
# # }
#
# # DATABASES = {
# #     'default': {
# #         'ENGINE': 'django.db.backends.mysql',
# #         'NAME': 'EasyCart',
# #         'USER': 'root',
# #         'PASSWORD': '',
# #         'HOST': '127.0.0.1',
# #         'PORT': '3309',
# #     }
# # }
#
# ############################################################################
# ############################### NEW database ###############################
# ##### https://supabase.com/dashboard/project/xnkyyylgdjkhtttepica ##########
# ############################################################################
#
# DATABASES = {
#     'default': {
#         'ENGINE': 'django.db.backends.postgresql_psycopg2',
#         'NAME': 'postgres',
#         'USER': 'postgres.xnkyyylgdjkhtttepica',
#         'PASSWORD': 'Easy@cart/2025',#DB pass
#         'HOST': 'aws-0-us-west-1.pooler.supabase.com',
#         'PORT': '6543'
#     }
#
# }
#
# # قاعدة البيانات الاحتياطية
# SECONDARY_DATABASE = {
#     'ENGINE': 'django.db.backends.mysql',
#     'NAME': 'EasyCart',
#     'USER': 'root',
#     'PASSWORD': '',
#     'HOST': '127.0.0.1',
#     'PORT': '3309',
# }
#
# # التحقق من الاتصال بقاعدة البيانات الأساسية
# def check_primary_db():
#     try:
#         connection = connections['default']
#         connection.cursor()  # محاولة فتح اتصال
#         return True
#     except OperationalError:
#         return False
#
# # التبديل إلى قاعدة البيانات الاحتياطية إذا تعذر الاتصال بالأساسية
# if not check_primary_db():
#     DATABASES['default'] = SECONDARY_DATABASE
#
#
# ##############################################################################################
#
# # Password validation
# # https://docs.djangoproject.com/en/5.1/ref/settings/#auth-password-validators
#
# AUTH_PASSWORD_VALIDATORS = [
#     {
#         'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
#     },
#     {
#         'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
#     },
#     {
#         'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
#     },
#     {
#         'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
#     },
# ]
#
#
# # Internationalization
# # https://docs.djangoproject.com/en/5.1/topics/i18n/
#
# LANGUAGE_CODE = 'en-us'
#
# TIME_ZONE = 'UTC'
#
# USE_I18N = True
#
# USE_TZ = True
#
#
# # Static files (CSS, JavaScript, Images)
# # https://docs.djangoproject.com/en/5.1/howto/static-files/
#
# STATIC_URL = 'static/'
#
# STATIC_ROOT = os.path.join(BASE_DIR, 'staticfiles')
#
# STATICFILES_DIRS = [
#     os.path.join(BASE_DIR, 'static'),
#     # Add any other directories with static files here
# ]
#
# MEDIA_ROOT = os.path.join(BASE_DIR, 'media')
# MEDIA_URL = '/media/'
# # Default primary key field type
# # https://docs.djangoproject.com/en/5.1/ref/settings/#default-auto-field
#
# DEFAULT_AUTO_FIELD = 'django.db.models.BigAutoField'
#
#
# INSTALLED_APPS += ['corsheaders']
#
# MIDDLEWARE.insert(0, 'corsheaders.middleware.CorsMiddleware')
#
# CORS_ALLOW_ALL_ORIGINS = True
"""
Django settings for EasyCart project.

Generated by 'django-admin startproject' using Django 5.1.2.

For more information on this file, see
https://docs.djangoproject.com/en/5.1/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/5.1/ref/settings/
"""
from datetime import timedelta
from pathlib import Path
import os
from django.db import connections
from django.db.utils import OperationalError

# Build paths inside the project like this: BASE_DIR / 'subdir'.
BASE_DIR = Path(__file__).resolve().parent.parent

# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/5.1/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = 'django-insecure-aqithoo8jxi9na(nh(weqtrux$_dl365xk0f!uk6(lm4nd1e%a'

# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = True

ALLOWED_HOSTS = []

# Application definition

INSTALLED_APPS = [
    "cart.apps.CartConfig",
    "User.apps.UserConfig",
    "home.apps.HomeConfig",
    "product.apps.ProductConfig",
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',
    'rest_framework',
    'worker.apps.WorkerConfig',
    'rest_framework.authtoken',
    'corsheaders',
    'rest_framework_simplejwt.token_blacklist',

]

MIDDLEWARE = [
    'corsheaders.middleware.CorsMiddleware',
    'django.middleware.security.SecurityMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',

]

ROOT_URLCONF = 'EasyCart.urls'

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [],
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.debug',
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
            ],
        },
    },
]

WSGI_APPLICATION = 'EasyCart.wsgi.application'

# Database Configuration
DATABASES = {
    'default': {
        'ENGINE': 'django.db.backends.postgresql_psycopg2',
        'NAME': 'postgres',
        'USER': 'postgres.xnkyyylgdjkhtttepica',
        'PASSWORD': 'Easy@cart/2025', # DB pass
        'HOST': 'aws-0-us-west-1.pooler.supabase.com',
        'PORT': '6543'
    }
}

# قاعدة البيانات الاحتياطية
SECONDARY_DATABASE = {
    'ENGINE': 'django.db.backends.mysql',
    'NAME': 'EasyCart',
    'USER': 'root',
    'PASSWORD': '',
    'HOST': '127.0.0.1',
    'PORT': '3309',
}

# التحقق من الاتصال بقاعدة البيانات الأساسية
def check_primary_db():
    try:
        connection = connections['default']
        connection.cursor()  # محاولة فتح اتصال
        return True
    except OperationalError:
        return False

# التبديل إلى قاعدة البيانات الاحتياطية إذا تعذر الاتصال بالأساسية
if not check_primary_db():
    DATABASES['default'] = SECONDARY_DATABASE


# REST_FRAMEWORK = {
#     'DEFAULT_AUTHENTICATION_CLASSES': (
#
#         'rest_framework_simplejwt.authentication.JWTAuthentication',
#     )
# }

REST_FRAMEWORK = {
    'DEFAULT_AUTHENTICATION_CLASSES': (
        'worker.authentication.CustomAuthentication',
        'rest_framework_simplejwt.authentication.JWTAuthentication',
    )
}

SIMPLE_JWT = {
    'AUTH_HEADER_TYPES': ('Bearer',),
    'ACCESS_TOKEN_LIFETIME': timedelta(days=1),
    'REFRESH_TOKEN_LIFETIME': timedelta(days=1),
    'BLACKLIST_AFTER_ROTATION': True,
    # 'ROTATE_REFRESH_TOKENS': False,
    'AUTH_TOKEN_CLASSES': (
        'rest_framework_simplejwt.tokens.AccessToken',
    ),
    'USER_ID_FIELD': 'id',  # تأكد أن الحقل مطابق للنماذج المخصصة لديك
    'USER_ID_CLAIM': 'user_id',  # سنستخدمه لاحقًا في إنشاء التوكين يدويًا
}

# Password validation
AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
    },
]

# Internationalization
LANGUAGE_CODE = 'en-us'
TIME_ZONE = 'UTC'
USE_I18N = True
USE_TZ = True

# Static files
STATIC_URL = 'static/'
STATIC_ROOT = os.path.join(BASE_DIR, 'staticfiles')
STATICFILES_DIRS = [
    os.path.join(BASE_DIR, 'static'),
]
MEDIA_ROOT = os.path.join(BASE_DIR, 'media')
MEDIA_URL = '/media/'

# Default primary key field type
DEFAULT_AUTO_FIELD = 'django.db.models.BigAutoField'

# CORS Configuration
CORS_ALLOW_ALL_ORIGINS = True

CORS_ALLOW_METHODS = [
    'GET',
    'POST',
    'PUT',
    'PATCH',
    'DELETE',
    'OPTIONS',
]

CORS_ALLOW_HEADERS = [
    'authorization',
    'content-type',
    'x-csrftoken',
    'x-requested-with',
]

AUTHENTICATION_BACKENDS = [
    'worker.authentication.CustomAuthentication',  # تأكد من تغيير myapp لاسم تطبيقك
    'django.contrib.auth.backends.ModelBackend',  # دعم تسجيل الدخول العادي
]

CORS_ALLOW_CREDENTIALS = True
